
public class punto1.1 {
    protected String SubSecMax = "";
    protected String SubSecCorta = "";

    public String CompararCadenas(int n, String Sec1, String Sec2)// n es el punto donde se empezará a comparar las
                                                                  // cadenas
    {
        if (n >= Sec1.length() || n >= Sec2.length()) {// Condicion de parada
            System.out.println(SubSecMax);
            return SubSecMax;
        } else if (Sec1.charAt(n) == Sec2.charAt(n)) {
            SubSecCorta = SubSecCorta + Sec1.charAt(n);
            if (SubSecCorta.length() >= SubSecMax.length()) {
                SubSecMax = SubSecCorta;
                return CompararCadenas(n + 1, Sec1, Sec2);
            }

        } else if (Sec1.charAt(n) != Sec2.charAt(n)) {
            SubSecCorta = "";
            return CompararCadenas(n + 1, Sec1, Sec2);
        }

        return CompararCadenas(n + 1, Sec1, Sec2);

    }

}








public class punto1.2 {
    protected int base = 2;
    protected int AreaPequeña = 2;
    protected int AreaGrande;

    public int calcular(int c, int altura) {// c es el numero de veces que el rectangulo pequeño cabe en el rectangulo
                                            // grande(debe de empezar en 1)
                                            
                                            // altura es la altura que le da el usuario al momento de escribir en el
                                            // paremetro
        AreaGrande = base * altura;
        AreaPequeña = AreaPequeña * c;
        if (AreaGrande == AreaPequeña || AreaGrande % AreaPequeña == 1) {
            System.out.println("en el rectangulo, base: " + base + " y altura: " + altura + " caben " + c
                    + " rectangulos pequeños ");
            return c;
        } else if (AreaGrande < AreaPequeña) {
            System.out.println("no cabe ningun rectangulo");
            return c - 1;
        }
        return calcular(c + 1, altura);
    }
}
